{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/article/article.component.css","webpack:///./src/app/article/article.component.html","webpack:///./src/app/article/article.component.ts","webpack:///./src/app/article/article.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;ACZ0C;AAQ1C;IAAA;IACA,CAAC;IADY,YAAY;QANxB,+DAAS,CAAC;YACR,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,sDAEC;SACb,CAAC;OACW,YAAY,CACxB;IAAD,mBAAC;CAAA;AADwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRgB;AACiB;AACL;AACV;AAEK;AAEgB;AACL;AAmB3D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACH,uEAAa;gBACnB,wDAAU;gBACV,kEAAmB;aAClB;YACD,YAAY,EAAE;gBACR,2DAAY;gBAClB,2EAAgB;aACf;YACD,SAAS,EAAE;gBACL,uEAAc;aACnB;YACD,SAAS,EAAE;gBACL,2DAAY;aACjB;SACF,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC3BtB,sBAAsB,yBAAyB,2BAA2B,yBAAyB,QAAQ,QAAQ,mBAAmB,KAAK,WAAW,kCAAkC,KAAK,mBAAmB,gCAAgC,qBAAqB,KAAK,WAAW,qBAAqB,sBAAsB,gCAAgC,qBAAqB,KAAK,YAAY,kCAAkC,mBAAmB,KAAK,WAAW,mBAAmB,wBAAwB,KAAK,aAAa,qBAAqB,wBAAwB,KAAK,C;;;;;;;;;;;ACA1jB,0FAA0F,gDAAgD,mBAAmB,o9BAAo9B,47BAA47B,YAAY,YAAY,eAAe,YAAY,kBAAkB,6N;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhkE;AACkB;AAEjB;AAQnD;IAaG,4CAA4C;IAC5C,0BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAVlD,sBAAiB,GAAG,KAAK,CAAC;QAC1B,sBAAiB,GAAG,IAAI,CAAC;QACzB,sBAAiB,GAAG,KAAK,CAAC;QAE1B,aAAa;QACb,gBAAW,GAAG,IAAI,wDAAS,CAAC;YACxB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrD,CAAC,CAAC;IAGH,CAAC;IACD,qCAAqC;IACrC,mCAAQ,GAAR;QACC,IAAI,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IACD,oBAAoB;IACpB,yCAAc,GAAd;QAAA,iBAKC;QAJI,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;aACvC,SAAS,CACE,cAAI,IAAI,YAAI,CAAC,WAAW,GAAG,IAAI,EAAvB,CAAuB,EAC/B,mBAAS,IAAK,YAAI,CAAC,UAAU,GAAG,SAAS,EAA3B,CAA2B,CAAC,CAAC;IACxD,CAAC;IACD,kCAAkC;IAClC,8CAAmB,GAAnB;QAAA,iBA+CC;QA9CD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YACzB,OAAO,CAAC,sCAAsC;SAClD;QAED,6CAA6C;QAC1C,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACnC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACrC,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;YAEnC,yCAAyC;YACtC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;iBACrC,SAAS,CAAC,kBAAQ;gBAEpB,qBAAqB;gBACrB,6DAA6D;gBAC7D,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC5B,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;iBACZ;qBAAM;oBACT,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;oBACnC,IAAI,mBAAmB,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC1C,IAAI,SAAS,GAAG,mBAAmB,CAAC,EAAE,GAAG,CAAC,CAAC;oBAC3C,OAAO,CAAC,EAAE,GAAG,SAAS,CAAC;iBACvB;gBAED,gBAAgB;gBACZ,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC;qBAC7C,SAAS,CAAC,qBAAW;oBACtB,KAAI,CAAC,UAAU,GAAG,WAAW,CAAC;oBAC9B,KAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,KAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,CAAC,EACD,mBAAS,IAAI,YAAI,CAAC,UAAU,GAAG,SAAS,EAA3B,CAA2B,CACtC,CAAC;YACL,CAAC,CAAC,CAAC;SACF;aAAM;YACF,uBAAuB;YACvB,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC;iBACvC,SAAS,CAAC,qBAAW;gBACf,KAAI,CAAC,UAAU,GAAG,WAAW,CAAC;gBACpC,KAAI,CAAC,cAAc,EAAE,CAAC;gBACzB,KAAI,CAAC,mBAAmB,EAAE,CAAC;YACzB,CAAC,EACE,mBAAS,IAAI,YAAI,CAAC,UAAU,GAAG,SAAS,EAA3B,CAA2B,CAAC,CAAC;SAChD;IACD,CAAC;IACD,4BAA4B;IAC5B,4CAAiB,GAAjB,UAAkB,SAAiB;QAAnC,iBAUC;QATE,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC;aAC3C,SAAS,CAAC,iBAAO;YACX,KAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,EAAE,CAAC;YACpC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzF,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC1B,CAAC,EACD,mBAAS,IAAK,YAAI,CAAC,UAAU,GAAG,SAAS,EAA3B,CAA2B,CAAC,CAAC;IAClD,CAAC;IACD,gBAAgB;IAChB,wCAAa,GAAb,UAAc,SAAiB;QAA/B,iBAWC;QAVE,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAAC;aAC9C,SAAS,CAAC,qBAAW;YACf,gCAAgC;YACzC,wCAAwC;YACxC,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACnB,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC5B,CAAC,EACE,mBAAS,IAAI,YAAI,CAAC,UAAU,GAAG,SAAS,EAA3B,CAA2B,CAAC,CAAC;IACjD,CAAC;IACD,+CAA+C;IAC/C,mDAAwB,GAAxB;QACG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAC9B,CAAC;IACD,+BAA+B;IAC/B,8CAAmB,GAAnB;QACG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAC/B,CAAC;IA/GS,gBAAgB;QAL5B,+DAAS,CAAC;YACR,QAAQ,EAAE,aAAa;;;SAGzB,CAAC;yCAeqC,+DAAc;OAdxC,gBAAgB,CAgH5B;IAAD,uBAAC;CAAA;AAhH4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXc;AAC6B;AAEnC;AAKrC;IAGC,yCAAyC;IACzC,wBAAoB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;QAH1B,yBAAyB;QAC5B,eAAU,GAAG,gCAAgC,CAAC;IAG9C,CAAC;IACD,oBAAoB;IACjB,uCAAc,GAAd;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;aAC1C,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAE7B,CAAC;IAED,gBAAgB;IACb,sCAAa,GAAb,UAAc,OAAgB;QAC7B,IAAI,SAAS,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACjE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;aAC7D,IAAI,CAAC,0DAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,MAAM,EAAd,CAAc,CAAC,CAAC;IACnC,CAAC;IACJ,qBAAqB;IAClB,uCAAc,GAAd,UAAe,SAAiB;QAClC,IAAI,SAAS,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACpE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAE,GAAG,GAAE,SAAS,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAE,GAAG,GAAE,SAAS,CAAC;aACpD,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IACJ,gBAAgB;IACb,sCAAa,GAAb,UAAc,OAAgB;QAC7B,IAAI,SAAS,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACjE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAE,GAAG,GAAE,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC;aAC7E,IAAI,CAAC,0DAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,MAAM,EAAd,CAAc,CAAC,CAAC;IACnC,CAAC;IACD,iBAAiB;IACjB,0CAAiB,GAAjB,UAAkB,SAAiB;QACrC,IAAI,SAAS,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACpE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAE,GAAG,GAAE,SAAS,CAAC;aACvD,IAAI,CAAC,0DAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,MAAM,EAAd,CAAc,CAAC,CAAC;IACnC,CAAC;IACI,oCAAW,GAAnB,UAAoB,GAAa;QAC7B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;IA7CQ,cAAc;QAD1B,gEAAU,EAAE;yCAKa,kDAAI;OAJjB,cAAc,CA8C1B;IAAD,qBAAC;CAAA;AA9C0B;;;;;;;;;;;;;ACR3B;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-root',\r\n   template: `\r\n\t\t\t\t<app-article></app-article>\r\n             `\r\n})\r\nexport class AppComponent { \r\n}\r\n    ","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppComponent }  from './app.component';\r\n\r\nimport { ArticleComponent }  from './article/article.component';\r\nimport { ArticleService } from './article/article.service';\r\n\r\n@NgModule({\r\n  imports: [     \r\n        BrowserModule,\r\n\t\tHttpModule,\r\n\t\tReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n        AppComponent,\r\n\t\tArticleComponent\r\n  ],\r\n  providers: [\r\n        ArticleService\r\n  ],\r\n  bootstrap: [\r\n        AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"h1 {\\r\\n    font-size: 2.0em;\\r\\n    margin: 20px 0 0 0;\\r\\n    font-weight: 400;   \\r\\n}\\r\\nh3 { \\r\\n\\tcolor: blue;\\r\\n}\\r\\ntable {\\r\\n    border-collapse: collapse;\\r\\n}\\r\\ntable, th, td {\\r\\n    border: 1px solid black;\\r\\n\\tfont-size:17px;\\r\\n}\\r\\ninput {\\r\\n    width: 225px;\\r\\n    margin: 8px 0;\\r\\n\\tbackground-color: #dfdfdf;\\r\\n\\tfont-size:17px;\\r\\n}\\r\\nbutton {\\r\\n    background-color: #008CBA;\\r\\n\\tcolor: white;\\r\\n}\\r\\n.error{\\r\\n    color: red;\\r\\n    font-size: 20px;\\r\\n}\\r\\n.success{\\r\\n    color: green;\\r\\n    font-size: 20px;\\r\\n}\"","module.exports = \"<h1>Welcome to typescriptproject!</h1>\\r\\n<h3 *ngIf=\\\"articleIdToUpdate; else create\\\"> \\r\\n   Update Article for Id: {{articleIdToUpdate}}\\r\\n</h3>\\r\\n<ng-template #create>\\r\\n   <h3> Create New Article </h3>\\r\\n</ng-template>\\r\\n<div>\\r\\n <form [formGroup]=\\\"articleForm\\\" (ngSubmit)=\\\"onArticleFormSubmit()\\\">\\r\\n  <table>\\r\\n    <tr><td>Enter Title</td><td><input formControlName=\\\"title\\\">\\r\\n\\t       <label *ngIf=\\\"articleForm.get('title').invalid && processValidation\\\" [ngClass] = \\\"'error'\\\"> Title is required. </label>\\r\\n   \\t</td></tr>\\r\\n    <tr><td>Enter Category</td><td><input formControlName=\\\"category\\\">\\r\\n\\t       <label *ngIf=\\\"articleForm.get('category').invalid && processValidation\\\" [ngClass] = \\\"'error'\\\"> Category is required. </label>\\r\\n\\t</td></tr>\\t\\r\\n    <tr><td colspan=\\\"2\\\">\\r\\n\\t    <button *ngIf=\\\"!articleIdToUpdate\\\">CREATE</button>  \\r\\n\\t\\t<button *ngIf=\\\"articleIdToUpdate\\\">UPDATE</button>  \\r\\n\\t    <button (click)=\\\"backToCreateArticle()\\\" *ngIf=\\\"articleIdToUpdate\\\">Go Back</button>  \\r\\n\\t</td></tr>\\r\\n  </table>\\r\\n </form> \\r\\n <br/>\\r\\n <div *ngIf=\\\"statusCode; else processing\\\">\\r\\n   <div *ngIf=\\\"statusCode === 201\\\" [ngClass] = \\\"'success'\\\">\\r\\n\\t    Article added successfully.\\r\\n   </div>   \\r\\n   <div *ngIf=\\\"statusCode === 409\\\" [ngClass] = \\\"'success'\\\">\\r\\n        Article already exists.\\r\\n   </div>   \\t\\r\\n   <div *ngIf=\\\"statusCode === 200\\\" [ngClass] = \\\"'success'\\\">\\r\\n        Article updated successfully.\\r\\n   </div>   \\t      \\r\\n   <div *ngIf=\\\"statusCode === 204\\\" [ngClass] = \\\"'success'\\\">\\r\\n        Article deleted successfully.\\r\\n   </div>   \\t   \\r\\n   <div *ngIf=\\\"statusCode === 500\\\" [ngClass] = \\\"'error'\\\">\\r\\n        Internal Server Error.\\r\\n   </div>\\t\\r\\n </div>\\r\\n <ng-template #processing>\\r\\n\\t<img *ngIf=\\\"requestProcessing\\\" src=\\\"assets/images/loading.gif\\\">\\r\\n </ng-template>\\r\\n</div>\\r\\n<h3>Article Details</h3>\\r\\n<table>\\r\\n  <tr><th> Id</th> <th>Title</th><th>Category</th><th></th><th></th></tr>\\r\\n  <tr *ngFor=\\\"let article of allArticles\\\" >\\r\\n    <td>{{article.id}}</td> <td>{{article.title}}</td> <td>{{article.category}}</td>\\r\\n\\t<td><button type=\\\"button\\\" (click)=\\\"loadArticleToEdit(article.id)\\\">Edit</button> </td> \\r\\n\\t<td><button type=\\\"button\\\" (click)=\\\"deleteArticle(article.id)\\\">Delete</button></td>\\r\\n  </tr>\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { ArticleService } from './article.service';\r\nimport { Article } from './article';\r\n\r\n@Component({\r\n   selector: 'app-article',\r\n   templateUrl: './article.component.html',\r\n   styleUrls: ['./article.component.css']\r\n})\r\nexport class ArticleComponent implements OnInit { \r\n   //Component properties\r\n   allArticles: Article[];\r\n   statusCode: number;\r\n   requestProcessing = false;\r\n   articleIdToUpdate = null;\r\n   processValidation = false;\r\n   \r\n   //Create form\r\n   articleForm = new FormGroup({\r\n       title: new FormControl('', Validators.required),\r\n       category: new FormControl('', Validators.required)\t   \r\n   });\r\n   //Create constructor to get service instance\r\n   constructor(private articleService: ArticleService) {\r\n   }\r\n   //Create ngOnInit() and load articles\r\n   ngOnInit(): void {\r\n\t   this.getAllArticles();\r\n   }   \r\n   //Fetch all articles\r\n   getAllArticles() {\r\n        this.articleService.getAllArticles()\r\n\t\t  .subscribe(\r\n                data => this.allArticles = data,\r\n                errorCode =>  this.statusCode = errorCode);   \r\n   }\r\n   //Handle create and update article\r\n   onArticleFormSubmit() {\r\n\t  this.processValidation = true;   \r\n\t  if (this.articleForm.invalid) {\r\n\t       return; //Validation failed, exit from method.\r\n\t  }   \r\n\t  \r\n\t  //Form is valid, now perform create or update\r\n      this.preProcessConfigurations();\r\n\t  let article = this.articleForm.value;\r\n\t  if (this.articleIdToUpdate === null) {\r\n\r\n\t    //Generate article id then create article\r\n        this.articleService.getAllArticles()\r\n\t     .subscribe(articles => {\r\n\t\t\t \r\n\t\t   //Generate article id\r\n\t\t   //Handle the condition when there will be no articles in db\t \r\n\t\t   if (articles.length == 0) {  \r\n\t\t\tarticle.id = 1;\r\n\t\t   } else {\r\n\t\t\tlet maxIndex = articles.length - 1;\r\n\t\t\tlet articleWithMaxIndex = articles[maxIndex];\r\n\t\t    let articleId = articleWithMaxIndex.id + 1;\r\n\t\t    article.id = articleId;\r\n\t\t   }\r\n\t\t   \r\n\t\t   //Create article\r\n     \t   this.articleService.createArticle(article)\r\n\t\t\t  .subscribe(successCode => {\r\n\t\t\t\t\tthis.statusCode = successCode;\r\n\t\t\t\t\tthis.getAllArticles();\t\r\n\t\t\t\t\tthis.backToCreateArticle();\r\n\t\t\t\t },\r\n\t\t\t\t errorCode => this.statusCode = errorCode\r\n\t\t\t   );\r\n\t\t });\t\t\r\n\t  } else {  \r\n   \t    //Handle update article\r\n        article.id = this.articleIdToUpdate; \t\t\r\n\t    this.articleService.updateArticle(article)\r\n\t      .subscribe(successCode => {\r\n\t\t            this.statusCode = successCode;\r\n\t\t\t\t    this.getAllArticles();\t\r\n\t\t\t\t\tthis.backToCreateArticle();\r\n\t\t\t    },\r\n\t\t        errorCode => this.statusCode = errorCode);\t  \r\n\t  }\r\n   }\r\n   //Load article by id to edit\r\n   loadArticleToEdit(articleId: string) {\r\n      this.preProcessConfigurations();\r\n      this.articleService.getArticleById(articleId)\r\n\t      .subscribe(article => {\r\n\t\t            this.articleIdToUpdate = article.id;   \r\n\t\t            this.articleForm.setValue({ title: article.title, category: article.category });\r\n\t\t\t\t\tthis.processValidation = true;\r\n\t\t\t\t\tthis.requestProcessing = false;   \r\n\t\t        },\r\n\t\t        errorCode =>  this.statusCode = errorCode);   \r\n   }\r\n   //Delete article\r\n   deleteArticle(articleId: string) {\r\n      this.preProcessConfigurations();\r\n      this.articleService.deleteArticleById(articleId)\r\n\t      .subscribe(successCode => {\r\n\t\t            //this.statusCode = successCode;\r\n\t\t\t\t\t//Expecting success code 204 from server\r\n\t\t\t\t\tthis.statusCode = 204;\r\n\t\t\t\t    this.getAllArticles();\t\r\n\t\t\t\t    this.backToCreateArticle();\r\n\t\t\t    },\r\n\t\t        errorCode => this.statusCode = errorCode);    \r\n   }\r\n   //Perform preliminary processing configurations\r\n   preProcessConfigurations() {\r\n      this.statusCode = null;\r\n\t  this.requestProcessing = true;   \r\n   }\r\n   //Go back from update to create\r\n   backToCreateArticle() {\r\n      this.articleIdToUpdate = null;\r\n      this.articleForm.reset();\t  \r\n\t  this.processValidation = false;\r\n   }\r\n}\r\n    ","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { Article } from './article';\r\n\r\n@Injectable()\r\nexport class ArticleService {\r\n    //URL for CRUD operations\r\n\tarticleUrl = \"http://localhost:3000/articles\";\r\n\t//Create constructor to get Http instance\r\n\tconstructor(private http:Http) { \r\n\t}\r\n\t//Fetch all articles\r\n    getAllArticles(): Observable<Article[]> {\r\n        return this.http.get(this.articleUrl)\r\n\t\t.pipe(map(this.extractData))\r\n\r\n\t}\r\n\r\n\t//Create article\r\n    createArticle(article: Article):Observable<number> {\r\n\t    let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: cpHeaders });\r\n        return this.http.post(this.articleUrl, article, options)\r\n\t\t.pipe(map(success => success.status))\r\n    }\r\n\t//Fetch article by id\r\n    getArticleById(articleId: string): Observable<Article> {\r\n\t\tlet cpHeaders = new Headers({ 'Content-Type': 'application/json' });\r\n\t\tlet options = new RequestOptions({ headers: cpHeaders });\r\n\t\tconsole.log(this.articleUrl +\"/\"+ articleId);\r\n\t\treturn this.http.get(this.articleUrl +\"/\"+ articleId)\r\n\t\t.pipe(map(this.extractData))\r\n    }\t\r\n\t//Update article\r\n    updateArticle(article: Article):Observable<number> {\r\n\t    let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: cpHeaders });\r\n        return this.http.put(this.articleUrl +\"/\"+ article.id, article, options)\r\n\t\t.pipe(map(success => success.status))\r\n    }\r\n    //Delete article\t\r\n    deleteArticleById(articleId: string): Observable<number> {\r\n\t\tlet cpHeaders = new Headers({ 'Content-Type': 'application/json' });\r\n\t\tlet options = new RequestOptions({ headers: cpHeaders });\r\n\t\treturn this.http.delete(this.articleUrl +\"/\"+ articleId)\r\n\t\t.pipe(map(success => success.status))\r\n    }\t\r\n\tprivate extractData(res: Response) {\r\n\t    let body = res.json();\r\n        return body;\r\n    }\r\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}